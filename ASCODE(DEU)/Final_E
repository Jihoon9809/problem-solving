#include <iostream>
#include <queue>
#include <string>

using namespace std;

string board[101];
int vis[5000][101];
int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };

int main() {
	int T;
	cin >> T;

	while (T--) {
		int n,m;
		cin >> n >> m;
//		int** vis = new int* [m];
		queue<pair<int, int>> q;
//		for (int i = 0; i < m; i++) vis[i] = new int[m + 1];

		for (int i = 0; i < n; i++) {
			cin >> board[i];
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (board[i][j] == 'S') {
					vis[i][j] = 1;
					q.push({ i,j });
				}
				else if (board[i][j] == '#') {
					vis[i][j] = -1;
				}
				else {
					vis[i][j] = 0;
				}
			}
		}
		
		//for (int i = 0; i < n; i++) {
		//	cout << "\n";
		//	for (int j = 0; j < m; j++) {
		//		cout << vis[i][j];
		//	}
		//}

		while (!q.empty()) {
			auto cur = q.front();
			q.pop();
			for (int i = 0; i < 4; i++) {
				int nx = dx[i] + cur.first;
				int ny = dy[i] + cur.second;
				if (nx >= n || ny >= m || ny < 0 || nx < 0) continue;
				if (board[nx][ny] == '#' ||vis[nx][ny] != 0) continue;
				q.push({nx,ny});
				vis[nx][ny] = vis[cur.first][cur.second] +1 ;
			}
		}
		//cout << "\n";
		//for (int i = 0; i < n; i++) {
		//	cout << "\n";
		//	for (int j = 0; j < m; j++) {
		//		cout << vis[i][j];
		//	}
		//}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if (board[i][j] == 'E') cout << vis[i][j]-1 << "\n";
				board[i][j] = vis[i][j] = 0;
			}
		}

	}
}
