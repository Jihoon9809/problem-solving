#include <iostream>
#include <queue>
#include <string>

using namespace std;

string board[101];
bool vis[101][101];
int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,1,0,-1 };

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n,count_1 = 0, count_2=0;
	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> board[i];
	}

	queue<pair<int, int>> q;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (vis[i][j] != 1) {
				q.push({ i,j });
				vis[i][j] = 1;
				count_1++;

				while (!q.empty()) {
					pair<int, int> cur = q.front();
					q.pop();
					for (int i = 0; i < 4; i++) {
						int nx = dx[i] + cur.first;
						int ny = dy[i] + cur.second;
						if (nx >= n || nx < 0 || ny >= n || ny < 0) continue;
						if (vis[nx][ny] == 1 || board[cur.first][cur.second] != board[nx][ny]) continue;
						q.push({ nx,ny });
						vis[nx][ny] = 1;
					}
				}
			}
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (board[i][j] == 'G') board[i][j] = 'R';
			vis[i][j] = 0;
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
				if (vis[i][j] != 1) {
				q.push({ i,j });
				vis[i][j] = 1;
				count_2++;

				while (!q.empty()) {
					pair<int, int> cur = q.front();
					q.pop();
					for (int i = 0; i < 4; i++) {
						int nx = dx[i] + cur.first;
						int ny = dy[i] + cur.second;
						if (nx >= n || nx < 0 || ny >= n || ny < 0) continue;
						if (vis[nx][ny] == 1 || board[cur.first][cur.second] != board[nx][ny]) continue;
						q.push({ nx,ny });
						vis[nx][ny] = 1;
					}
				}
			}
		}
	}

	cout << count_1 << " "<< count_2;
}

// 두번째 while문을 돌리기 위해 board의 G 값을 R로 바꾸는 과정에서 오류가 있었다. 3번째 2중 for문을 수행하며 vis의 값이 ture인지 판단 하기 전 G를 R로 바꾸는 과정을 수행하였으며,
하나의 G를 R로 바꾼후 while문으로 들어가기 때문에 오답이 발생하였다.
