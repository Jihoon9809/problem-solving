#include <iostream>

using namespace std;

long long mod(int a,int b,int c) {
	if (b == 1) return a % c;

	long long res = mod(a, b / 2, c);
	res = (res * res) % c;
	
	if (b % 2 == 0) return res;
	return res * a % c;
}

int main() {
	long long a, b, c;

	cin >> a >> b >> c;
	cout << mod(a, b, c);
}


처음 재귀함수를 풀었다.
문제는 단순하게 제곱한 수를 나눈 나머지를 구하는 문제이다.
하지만 메모리, 시간복잡도를 신경써야하는 문제이다.
 
문제를 해결하기 위해 검색을 통해 알아보았다.

제곱은 자기자신을 지수 만큼 곱한느 것이다. 따라서 문제를 해결하기 위해 지수를 반으로 나누어 계산을 했다.
res = mod(a, b/2, c);를 통해 재귀호출한 이유이다. 이후 res= res *res %c를 통해 나머지를 구해주었다.
if( b %2 ==0)는 짝수일 경우 res를 반환하면 되지만, 홀수일 경우 a를 한번 더 곱해서 나머지를 구해야한다.
base condition(탈출구)의 경우 지수의 맨 아래, 2로 나누었을 때 더이상 나눌 수 없능 상태일 때로 생각한다.
