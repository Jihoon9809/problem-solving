#include <iostream>
#include <queue>

using namespace std;

int board[1001][1001];
bool vist[1001];
queue<int> q;

int n, m, v;

void reset() {
	for (int i = 1; i <= n; i++) {
		vist[i] = 0;
	}
}

void DFS(int v) {
	vist[v] = 1;
	cout << v << " ";

	for (int i = 1; i <= n; i++) {
		if (board[v][i] == 1 && vist[i] == 0) DFS(i);
	}

}

void BFS(int v) {
	q.push(v);
	vist[v] = 1;
	cout << v << " ";

	while (!q.empty()) {
		int cur = q.front();
		q.pop();

		for (int i = 1; i <= n; i++) {
			if (board[cur][i] == 1 && vist[i] == 0) {
				q.push(i);
				vist[i] = 1;
				cout << i << " ";
			}
		}
	}
}


int main() {
	cin >> n >> m >> v;

	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		board[x][y] = 1;
		board[y][x] = 1;
	}

	DFS(v);
	cout << "\n";

	reset();

	BFS(v);
}
